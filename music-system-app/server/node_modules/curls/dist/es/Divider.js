function _extends() {
  _extends =
    Object.assign ||
    function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i]
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key]
          }
        }
      }
      return target
    }
  return _extends.apply(this, arguments)
}

import {css} from '@emotion/core'
import {useStyles} from '@style-hooks/core'
import emptyObj from 'empty/object'
import createComponent from './createComponent'
import {useBasicBox} from './Box'
import {pushCss} from './utils'
const defaultStyles = {
  name: '1vb2cio',
  styles: 'width:100%;min-height:1px;clear:both;position:relative;',
}
export const useDivider = props =>
    useStyles(
      'divider',
      emptyObj,
      pushCss(
        _extends(
          {
            role: 'separator',
            bg: 'translucentLight',
          },
          props
        ),
        defaultStyles
      )
    ),
  Divider = createComponent('div', props => useBasicBox(useDivider(props)))

if (process.env.NODE_ENV !== 'production') {
  const boxPropTypes = require('./Box/propTypes').default

  Divider.displayName = 'Divider'
  Divider.propTypes = boxPropTypes
}
