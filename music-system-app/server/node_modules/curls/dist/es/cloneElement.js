function _extends() {
  _extends =
    Object.assign ||
    function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i]
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key]
          }
        }
      }
      return target
    }
  return _extends.apply(this, arguments)
}

import {jsx} from '@emotion/core'
export default (element, props) =>
  jsx(
    element.type,
    _extends(
      {
        key: element.key,
        ref: element.ref,
      },
      element.props,
      {},
      props
    )
  )
