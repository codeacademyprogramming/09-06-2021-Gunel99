function _extends() {
  _extends =
    Object.assign ||
    function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i]
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key]
          }
        }
      }
      return target
    }
  return _extends.apply(this, arguments)
}

import {createStyleHook} from '@style-hooks/core'
import createComponent from '../createComponent'
import * as flexStyles from '../Flex/styles'
import * as styles from './styles'
export const useBasicBox = createStyleHook('box', styles),
  useBox = createStyleHook('box', _extends({}, flexStyles, styles))
export const BasicBox = createComponent('div', useBasicBox),
  Box = createComponent('div', useBox)

if (process.env.NODE_ENV !== 'production') {
  const propTypes = require('./propTypes').default,
    flexPropTypes = require('../Flex/propTypes').default

  BasicBox.displayName = 'BasicBox'
  BasicBox.propTypes = _extends({}, propTypes)
  Box.displayName = 'Box'
  Box.propTypes = _extends({}, flexPropTypes, propTypes)
}
