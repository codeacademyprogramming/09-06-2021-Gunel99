function _extends() {
  _extends =
    Object.assign ||
    function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i]
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key]
          }
        }
      }
      return target
    }
  return _extends.apply(this, arguments)
}

import {useStyles} from '@style-hooks/core'
import createWithCssProp from '../createWithCssProp'
import * as styles from './styles'
/**
 * <Transitionable duration='fast' easing='swiftMove' property='opacity'>
 *   <SomeComponent o='1.0'/>
 * </Transitionable>
 */

export const useTransitionable = props =>
    useStyles(
      'transitionable',
      styles,
      _extends(
        {
          duration: 'normal',
          easing: 'linear',
        },
        props
      )
    ),
  Transitionable = createWithCssProp(useTransitionable)

if (process.env.NODE_ENV !== 'production') {
  const propTypes = require('./propTypes').default

  Transitionable.displayName = 'Transitionable'
  Transitionable.propTypes = propTypes
}
