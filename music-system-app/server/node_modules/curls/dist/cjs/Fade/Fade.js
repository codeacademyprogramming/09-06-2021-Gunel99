'use strict'

exports.__esModule = true
exports.Fade = exports.useFade = void 0

var _core = require('@style-hooks/core')

var _createRenderProp = _interopRequireDefault(require('../createRenderProp'))

var _useToggleVisibility = _interopRequireDefault(
  require('../useToggleVisibility')
)

var styles = _interopRequireWildcard(require('./styles'))

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj
  } else {
    var newObj = {}
    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc =
            Object.defineProperty && Object.getOwnPropertyDescriptor
              ? Object.getOwnPropertyDescriptor(obj, key)
              : {}
          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc)
          } else {
            newObj[key] = obj[key]
          }
        }
      }
    }
    newObj.default = obj
    return newObj
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj}
}

function _extends() {
  _extends =
    Object.assign ||
    function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i]
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key]
          }
        }
      }
      return target
    }
  return _extends.apply(this, arguments)
}

function _ref(props) {
  return (0, _core.useStyles)('fade', styles, props)
}

const useFade = props => {
    props = _extends(
      {
        property: 'visibility, opacity',
      },
      props
    )
    props.from = props.from || 0
    props.to = props.to === void 0 ? 1 : props.to
    return (0, _useToggleVisibility.default)(_ref, props)
  },
  Fade = (0, _createRenderProp.default)(useFade)

exports.Fade = Fade
exports.useFade = useFade

if (process.env.NODE_ENV !== 'production') {
  const propTypes = require('./propTypes').default

  Fade.displayName = 'Fade'
  Fade.propTypes = propTypes
}
