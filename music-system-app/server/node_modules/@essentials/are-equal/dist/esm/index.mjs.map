{"version":3,"file":"index.mjs","sources":["../../src/index.ts"],"sourcesContent":["export const areEqualArrays = <A extends any[], B extends any[]>(\n  arrA: A,\n  arrB: B | A\n): boolean => {\n  if (arrA === arrB) return true\n  if (arrA.length !== arrB.length) return false\n\n  let i = 0\n  for (; i < arrA.length; i++) if (arrA[i] !== arrB[i]) return false\n  return true\n}\n\nexport const areEqualObjects = <\n  A extends Record<any, any>,\n  B extends Record<any, any>\n>(\n  objA: A,\n  objB: B | A\n): boolean => {\n  if (objA === objB) return true\n  const keysA = Object.keys(objA)\n  if (keysA.length !== Object.keys(objB).length) return false\n\n  let i = 0\n  for (; i < keysA.length; i++)\n    if (objA[keysA[i]] !== objB[keysA[i]]) return false\n  return true\n}\n\nexport const areEqual = <\n  A extends Record<any, any> | any[],\n  B extends Record<any, any> | any[]\n>(\n  objA: A,\n  objB: B | A\n): boolean =>\n  // @ts-ignore\n  (Array.isArray(objA) === true ? areEqualArrays : areEqualObjects)(objA, objB)\n\nexport default areEqual\n"],"names":["areEqualArrays","arrA","arrB","length","i","areEqualObjects","objA","objB","keysA","Object","keys","areEqual","Array","isArray"],"mappings":"IAAaA,EAAiB,CAC5BC,EACAC,QAEID,IAASC,EAAM,OAAO,KACtBD,EAAKE,SAAWD,EAAKC,OAAQ,OAAO,UAEpCC,EAAI,EACDA,EAAIH,EAAKE,OAAQC,OAASH,EAAKG,KAAOF,EAAKE,GAAI,OAAO,SACtD,GAGIC,EAAkB,CAI7BC,EACAC,QAEID,IAASC,EAAM,OAAO,MACpBC,EAAQC,OAAOC,KAAKJ,MACtBE,EAAML,SAAWM,OAAOC,KAAKH,GAAMJ,OAAQ,OAAO,UAElDC,EAAI,EACDA,EAAII,EAAML,OAAQC,OACnBE,EAAKE,EAAMJ,MAAQG,EAAKC,EAAMJ,IAAK,OAAO,SACzC,GAGIO,EAAW,CAItBL,EACAC,KAGyB,GAAxBK,MAAMC,QAAQP,GAAiBN,EAAiBK,GAAiBC,EAAMC"}